var documenterSearchIndex = {"docs":
[{"location":"installation_conda_dependencies/#DoViP-dependencies-and-their-installation","page":"Dependencies","title":"DoViP dependencies and their installation","text":"","category":"section"},{"location":"installation_conda_dependencies/#geNomad","page":"Dependencies","title":"geNomad","text":"","category":"section"},{"location":"installation_conda_dependencies/","page":"Dependencies","title":"Dependencies","text":"geNomad use and installation is described in detail here. Below is the installation procedure we used on our servers.","category":"page"},{"location":"installation_conda_dependencies/","page":"Dependencies","title":"Dependencies","text":"mamba create -p path/to/conda_genomad -c conda-forge -c bioconda genomad\n\n# database setup\nconda activate conda_genomad\ncd /path/for/databases\ngenomad download-database .","category":"page"},{"location":"installation_conda_dependencies/#VIBRANT","page":"Dependencies","title":"VIBRANT","text":"","category":"section"},{"location":"installation_conda_dependencies/","page":"Dependencies","title":"Dependencies","text":"VIBRANT use and installation is described in detail here. Below is the installation procedure we used on our servers.","category":"page"},{"location":"installation_conda_dependencies/","page":"Dependencies","title":"Dependencies","text":"# env\nconda create -n conda_VIBRANT\nconda activate conda_VIBRANT\n\n# dependencies\nconda install -c bioconda hmmer\nconda install -c bioconda prodigal\nconda install -c bioconda biopython\nconda install -c anaconda pandas\nconda install matplotlib\nconda install seaborn\nconda install -c anaconda numpy\nconda install scikit-learn\n\n# install VIBRANT itself\ncd path/for/vibrant/repo\ngit clone https://github.com/AnantharamanLab/VIBRANT\nchmod -R 777 VIBRANT/\n\n# database\ncd databases\npip install --upgrade scikit-learn==0.21.3\npip install --upgrade numpy==1.17.0\npython3 VIBRANT_setup.py ","category":"page"},{"location":"installation_conda_dependencies/#VirSorter2","page":"Dependencies","title":"VirSorter2","text":"","category":"section"},{"location":"installation_conda_dependencies/","page":"Dependencies","title":"Dependencies","text":"VirSorter 2 use and installation are detailed here. Below is the installation procedure we used on our servers.","category":"page"},{"location":"installation_conda_dependencies/","page":"Dependencies","title":"Dependencies","text":"# create env and instal, virsorter2\nconda create -p path/to/conda_virsorter2\nmamba activate path/to/conda_virsorter2\nmamba install -c conda-forge -c bioconda virsorter=2\n\n# databases\ncd conda_virsorter2/\nvirsorter setup -d db -j 4","category":"page"},{"location":"installation_conda_dependencies/#DeepVir-Finder","page":"Dependencies","title":"DeepVir Finder","text":"","category":"section"},{"location":"installation_conda_dependencies/","page":"Dependencies","title":"Dependencies","text":"DeepVir Finder use and installation are detailed here. Below is the installation procedure we used on our servers.","category":"page"},{"location":"installation_conda_dependencies/","page":"Dependencies","title":"Dependencies","text":"# create env\nconda create -p /path/to/conda_DVF python=3.6 numpy theano=1.0.3 keras=2.2.4 scikit-learn Biopython h5py\nconda activate conda_DVF\n\n# clone the git repo\ncd path/for/repo\ngit clone https://github.com/jessieren/DeepVirFinder","category":"page"},{"location":"installation_conda_dependencies/#CheckV","page":"Dependencies","title":"CheckV","text":"","category":"section"},{"location":"installation_conda_dependencies/","page":"Dependencies","title":"Dependencies","text":"CheckV use and installation are detailed here. Below is the installation procedure we used on our servers.","category":"page"},{"location":"installation_conda_dependencies/","page":"Dependencies","title":"Dependencies","text":"# env\nconda create -p path/to/conda_checkV\nconda activate conda_checkV\n\n#\nconda install -c conda-forge -c bioconda checkV\n\n\n# database\ncd path/for/databases/\ncheckv download_database ./","category":"page"},{"location":"installation_conda_dependencies/#PhaBox","page":"Dependencies","title":"PhaBox","text":"","category":"section"},{"location":"installation_conda_dependencies/","page":"Dependencies","title":"Dependencies","text":"PhaBox use and installation are detailed here. Below is the installation procedure we used on our servers.","category":"page"},{"location":"installation_conda_dependencies/","page":"Dependencies","title":"Dependencies","text":"cd path/for/repo\ngit clone https://github.com/KennthShang/PhaBOX\ncd PhaBOX/\nconda env create -f webserver.yml -p path/for/conda_PhaBOX\nconda activate conda_PhaBOX\n\n# databases\npip install gdown\ngdown  --id 1hjACPsIOqqcS5emGaduYvYrCzrIpt2_9\ngdown  --id 1E94ii3Q0O8ZBm7UsyDT_n06YekNtfV20\n\npath/for/repo/unzip phagesuite_database.zip  > /dev/null\npath/for/repo/unzip phagesuite_parameters.zip  > /dev/null\n\n\ncp blastxml_to_tabular.pypath/for/conda_PhaBOX/bin/blastxml_to_tabular.py\nchmod 777 path/for/conda_PhaBOX/bin/blastxml_to_tabular.py","category":"page"},{"location":"dovip_projects/#Project-definition","page":"Project definition","title":"Project definition","text":"","category":"section"},{"location":"dovip_projects/","page":"Project definition","title":"Project definition","text":"DoViP works with the concept of projects. A project represents a folder in which the DoViP outputs are saved, plus a binary file encoding project-specific information. ","category":"page"},{"location":"dovip_projects/#Singleworkflow-projects","page":"Project definition","title":"Singleworkflow projects","text":"","category":"section"},{"location":"dovip_projects/","page":"Project definition","title":"Project definition","text":"In singleworkflow mode, a project is represented by the sample folder and a binary file. A simplified example is show below.","category":"page"},{"location":"dovip_projects/","page":"Project definition","title":"Project definition","text":"single_workflow_project_name/ \n    ├── output_folders ... \n    ├── ... \n    ├── ...\n    └── sproj.binary ","category":"page"},{"location":"dovip_projects/#Multipleworkflow-projects","page":"Project definition","title":"Multipleworkflow projects","text":"","category":"section"},{"location":"dovip_projects/","page":"Project definition","title":"Project definition","text":"In multipleworkflow mode, a project is represented by the main project folder, subfolders for each of the samples, and the binary file. And example is shown below.  ","category":"page"},{"location":"dovip_projects/","page":"Project definition","title":"Project definition","text":"multiple_workflow_project_name/ \n    ├── sample1_subfolder/ \n    ├── sample2_subfolder/ \n    ├── sample3_subfolder/ \n    └── mproj.binary ","category":"page"},{"location":"dovip_projects/","page":"Project definition","title":"Project definition","text":"Basically, a multipleworkflow project comprises several singleworkflow projects:","category":"page"},{"location":"dovip_projects/","page":"Project definition","title":"Project definition","text":"multiple_workflow_project_name/ \n    ├── sample1_subfolder/ \n    |    ├── output_folders ... \n    |    ├── ... \n    |    ├── ...\n    |    └── sproj.binary \n    ├── sample2_subfolder/ \n    |    ├── output_folders ... \n    |    ├── ... \n    |    ├── ...\n    |    └── sproj.binary \n    ├── sample3_subfolder/\n    |    ├── output folders ... \n    |    ├── ... \n    |    ├── ...\n    |    └── sproj.binary  \n    └── mproj.binary ","category":"page"},{"location":"dovip_outputs_overview/#Detailed-outputs","page":"Outputs - overview","title":"Detailed outputs","text":"","category":"section"},{"location":"dovip_outputs_overview/","page":"Outputs - overview","title":"Outputs - overview","text":"All the outputs from an individual sample are saved within its corresponding folder. Outputs are grouped into subfolders corresponding to the step that generated them, with their names beeing suggestive for the respective step. Such a project folder is exemplified below.  ","category":"page"},{"location":"dovip_outputs_overview/","page":"Outputs - overview","title":"Outputs - overview","text":"single_workflow_project_name/ \n    ├──  ALL_00_min_length_#\n    |        ├── outMFasta_small.fna   \n    ├──  ALL-01a_genomad\n    |        ├── ALL-01a_01_genomad_out\n    |        ├── ALL-01a_02_postgenomad_integrated_df.tsv\n    |        ├── ALL-01a_02_postgenomad_nonintegrated_df.tsv\n    ├── ALL-01b_DVF\n    |        ├── ALL-01b_01_DVF_out\n    |        ├── ALL-01b_postdfvf_nonintegrated_df.tsv\n    ├── ALL-01c_virSorter2\n    |        ├── ALL-01c_01_virSorter2_out\n    |        ├── ALL-01c_02_postVS2_integrated_df.tsv\n    |        ├── ALL-01c_02_postVS2_nonintegrated_df.tsv\n    ├── ALL-01d_vibrant\n    |        ├── ALL-01d_01_vibrant_out\n    |        ├── ALL-01d_02_postvibrant_integrated_df.tsv\n    |        ├── ALL-01d_02_postvibrant_nonintegrated_df.tsv\n    ├── ALL-01e_viralVerify\n    |        ├── ALL-01e_01_viralVerify_out\n    |        ├── ALL-01e_02_postViralVerify.tsv \n    ├── I-02_checkV_Integrated\n    |        ├── I-02_00_aggregated_integrated_virus_All_contigs.tsv\n    |        ├── I-02_00_aggregated_integrated_virus_All_contigs.fna\n    |        ├── I-02_01_checkVIntegrated_1\n    |        ├── I-02_02_postcheckV1_integrated_cordf.tsv\n    |        ├── I-02_02_postcheckV1_integrated_withmergedprovirIDs_cordf.tsv\n    |        ├── I-02_03_merged_integrated.tsv\n    |        ├── I-02_03_merged_integrated.fna\n    |        ├── I-02_04_checkVIntegrated_2\n    |        ├── I-02_05_postcheckV2_integrated_df_p.tsv\n    ├── I-03_FinalThresholding\n    |        ├── I-03_Final_Viruses_df.tsv\n    |        ├── I-03_Final_Viruses.fna\n    ├── M-02_Detection\n    |        ├── M-02_Mixed_Int_Viruses.tsv\n    |        ├── M-02_Mixed_NonInt_Viruses.tsv\n    ├── N-02_checkV_Nonintegrated\n    |        ├── N-02_00_aggregated_nonintegrated_virus_contigs.tsv\n    |        ├── N-02_00_aggregated_nonintegrated_virus_contigs.fna\n    |        ├── N-02_01_checkV\n    |        ├── N-02_02_postcheckV_nonintegrated_df.tsv\n    |        ├── N-02_02_postcheckV_nonintegrated.fna\n    ├── N-03_phaTYPNonintegrated\n    |        ├── N-03_01_phaTYP_out\n    |        ├── N-03_02_NonINT_mergedPostCheckV_PhaTYP.tsv\n    ├── N-04_FinalThresholding\n    |        ├── N-04_Final_Viruses_df.tsv\n    |        ├── N-04_Final_Viruses.fna\n    └── sproj.binary ","category":"page"},{"location":"Running/#Running-DoViP-overview","page":"Overview","title":"Running DoViP - overview","text":"","category":"section"},{"location":"Running/","page":"Overview","title":"Overview","text":"DoViP can be run in a single sample mode (projtype=singleworkflow) or in a multiple sample mode (projtype=multipleworkflow). In singleworkflow mode it processes only one sample (one input fasta file, representing a metagenome for example). There are many parameters required for the singleworkflow mode (see next page) and they should all be given as arguments at the command line. In multipleworkflow mode DoViP processes multiple samples (multiple input fasta files) one after the other, each with its own individual parameters (the same parameters as for singleworkflow mode, but without pd_prefix). These parameters should be given to DoViP as a .tsv table, where one row represents one sample. ","category":"page"},{"location":"Running/","page":"Overview","title":"Overview","text":"tip: Tip\nDue to the high number of arguments needed by DoViP, it is easier to call it in multipleworkflow mode even when running one single sample, because in this mode most of parameters are given as a .tsv file. ","category":"page"},{"location":"Running/#Modalities-to-call-DoViP","page":"Overview","title":"Modalities to call DoViP","text":"","category":"section"},{"location":"Running/","page":"Overview","title":"Overview","text":"After activating the corresponding conda environment, DoViP can be started simply by its name. This calls a bash function which starts the Julia programming language and the DoViP_App.jl module.  ","category":"page"},{"location":"Running/","page":"Overview","title":"Overview","text":"conda activate conda_DoViP\n\nDoViP [...args]","category":"page"},{"location":"Running/","page":"Overview","title":"Overview","text":"Alternatively, the DoViP_App module can be called directly, as exemplified below.  ","category":"page"},{"location":"Running/","page":"Overview","title":"Overview","text":"julia path/to/conda_DoViP/DoViP_App.jl/src/DoViP_App.jl [...args]","category":"page"},{"location":"Running/","page":"Overview","title":"Overview","text":"Calling directly the DoViP_App.jl module is required when using tools like nice (to set process priorities) and taskset (to confine the processes only to a selected CPU subset).   An example using both nice and taskset is shown below. Ofcourse, replace the values for the nice -n and the taskset -c parameters with your specific values.  ","category":"page"},{"location":"Running/","page":"Overview","title":"Overview","text":"nice -n 10 taskset -c 76-90 julia path/to/conda_DoViP/DoViP_App.jl/src/DoViP_App.jl [...args]","category":"page"},{"location":"Running/","page":"Overview","title":"Overview","text":"tip: Tip\nSome of the initial predictors (geNomad and DeepVir Finder) will run in all free cores from the machine, regardless of the number of cpus_per_task set by the user. In the case of geNomad that's usually fine. However, DeepVir Finder is considerably slowed down when there are many CPUs on the machine. Using taskset to confine the processes to a defined subset of the CPUs from the machine will successfully mitigate this problem.","category":"page"},{"location":"Running/","page":"Overview","title":"Overview","text":"The parameters used by DoViP for each sample are saved in its corresponding subfolder in the file project_parameters_and_status.txt. Besides the parameters, in this file it is also saved a brief status report showing which individual steps should be run, have been finished or are currently running. However, the complete log for each DoViP step is sent to the standard output. To save it and potential errors to a file, use the code below:  ","category":"page"},{"location":"Running/","page":"Overview","title":"Overview","text":"nice -n 10 taskset -c 76-90 julia path/to/conda_DoViP/DoViP_App.jl/src/DoViP_App.jl [...args] > dovip_sample.log 2> dovip_sample.err ","category":"page"},{"location":"Running/","page":"Overview","title":"Overview","text":"note: Note\nIf the project folder or individual sample subfolders already exist, for example from a previous DoViP run, and the DoViP is started with the parameter continue=false, the user will be asked at the standard output if the existent folders should be overwritten or not. This message will not be visible if the standard output is sent to a file.","category":"page"},{"location":"Running/#DoViP-argument-syntax","page":"Overview","title":"DoViP argument syntax","text":"","category":"section"},{"location":"Running/","page":"Overview","title":"Overview","text":"The arguments and their values should be given in the form argument_name=argument_value.   Example:","category":"page"},{"location":"Running/","page":"Overview","title":"Overview","text":"DoViP projtype=multiworkflow continue=false allrefs_params=path/to/tsv_file_with_parameters spd=path/to/output_folder","category":"page"},{"location":"Running_singleworkflow_params/#DoViP-singleworklow-parameters","page":"Single workflow parameters","title":"DoViP singleworklow parameters","text":"","category":"section"},{"location":"Running_singleworkflow_params/#General-project-arguments","page":"Single workflow parameters","title":"General project arguments","text":"","category":"section"},{"location":"Running_singleworkflow_params/#pd_prefix","page":"Single workflow parameters","title":"pd_prefix","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this is the path toward the folder where the outputs will be saved. The outputs from each individual sample will be grouped into subfolders in this folder. In the case of the singleworkflow mode, only one subfolder (for one sample) will be saved. In the case of the multiworklow mode, several subfolders will be saved, each corresponding to one sample. The subfolders will have the same names as their corresponding input fasta files (minus the file extension). This is the single parameter that should NOT be given in the .tsv file with parameters for the multiworkflow mode.     ","category":"page"},{"location":"Running_singleworkflow_params/#inref","page":"Single workflow parameters","title":"inref","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the path toward the fasta file containing the input contigs. \nAccepted file extensions are: \".fasta\", \".fna\", \".fst\", \".fas\", \".fa\", \".mfa\"\nmandatory parameter, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#projtype","page":"Single workflow parameters","title":"projtype","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the only acceptable value here is 'singleworkflow', and it tells DoViP that only one metagenome is analyzed in this run (or for this row, when ussing a .tsv file to send the arguments to DoViP)\nmandatory parameter, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#sample_set","page":"Single workflow parameters","title":"sample_set","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the name of the sample/metagenome collection\nmandatory parameter, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#use_slurm","page":"Single workflow parameters","title":"use_slurm","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"if calculations should be run on an High Performance Computing Cluster, using slurm and sbatch\npossible values: 'true' or 'false'\ndefault is 'false'","category":"page"},{"location":"Running_singleworkflow_params/#continue","page":"Single workflow parameters","title":"continue","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"if the calculations for this sample should be continued from a previous run of the project\nthis is useful for example when changing the desired initial predictors (see details below) or the thresholds for the final selection of the viral contigs\npossible values: 'true' or 'false'\ndefault is 'false'","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"note: Note\nif continue is set to 'false' and the sample subfolder already exists, a message will appear asking to confirm or deny the deletion of the existing folder.","category":"page"},{"location":"Running_singleworkflow_params/#stop_after_initial_predictors","page":"Single workflow parameters","title":"stop_after_initial_predictors","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"if the calculations should stop after the initial predictions have finished (useful for example if the project should be continued later)\npossible values: 'true' or 'false'\ndefault is 'false'","category":"page"},{"location":"Running_singleworkflow_params/#min_contig_length","page":"Single workflow parameters","title":"min_contig_length","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the minimum length of the contigs from the input file (inref) which should be kept\nonly contigs equal or larger than this value will be sent to the initial predictors\nvalue is Integer\ndefault value is 1000","category":"page"},{"location":"Running_singleworkflow_params/#ARGUMENTS-FOR-INITIAL-PREDICTION-STEPS","page":"Single workflow parameters","title":"ARGUMENTS FOR INITIAL PREDICTION STEPS","text":"","category":"section"},{"location":"Running_singleworkflow_params/#geNomad-options","page":"Single workflow parameters","title":"geNomad options","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"If this this step is selected for running (genomad_signal=do), the following will happen:  ","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"DoViP will start a geNomad run in the conda environment given by the genomad_env parameter, using the following command:\n`genomad end-to-end --cleanup --splits 8 '/path/to/input.fasta' '/path/to/output_folder' `genomadDB_p` --min-score `genomad_min_score``\nDoViP will postprocess the geNomad results (file _virus_summary.tsv) to separate NON-INTEGRATED from INTEGRATED viruses.","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"If, instead of running geNomad, external results should be used, the following will happen:","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"DoViP will postprocess the geNomad results (file _virus_summary.tsv) to separate NON-INTEGRATED from INTEGRATED viruses.","category":"page"},{"location":"Running_singleworkflow_params/#genomad_signal","page":"Single workflow parameters","title":"genomad_signal","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"if geNomad predictions should be considered\npossible values:\n'do' - run this predictor step. Can be always used, regardless of the signals in the previous steps\n'dont' - don't run this predictor step. It can be used only if the project is new (continue = false), or, for continued projects, if there was a 'dont' or 'remove' signal in the previous step.\n'use'- re-use predictor results calculated in previous runs of this project. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or 'ignore' in the previous step, and, if their respective \"progress\" is finished.\n'use_external' - use results calculated previously by the predictor independently from a DoViP project.\n'ignore' - doesn't take into consideration existing results calculated in a previous run of this project. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or 'ignore' in the previous step, and, if their respective \"progress\" is finished. \n'remove' - removes results calculated in a previous step. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or ignore in the previous step, regardless of their \"progress\". \nmandatory parameter, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#genomad_res","page":"Single workflow parameters","title":"genomad_res","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"/path/to/geNomad_output_folder when the geNomad predictions were calculated outside DoViP\nneeded only if genomad_signal=use_external\nthe path should be the exact one that was given to the geNomad command as output folder\nDoViP will expect to find inside /path/to/geNomad_output_folder the geNomad summary folder (name pattern beeing composed from the input_name, without file extension, and summary):","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"/path/to/geNomad_output_folder/\n    ├──  input_name_summary","category":"page"},{"location":"Running_singleworkflow_params/#genomad_env","page":"Single workflow parameters","title":"genomad_env","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the name of the conda environment where geNomad is installed\nmandatory parameter if geNomad signal is do, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#genomadDB_p","page":"Single workflow parameters","title":"genomadDB_p","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the path toward the folder with the geNomad database\nmandatory parameter if geNomad signal is do, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#genomad_min_score","page":"Single workflow parameters","title":"genomad_min_score","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"mininum score to be used by geNomad to filter viral contigs\nvalue is Float (between 0.0 and 1.0)\ndefault it 0.7","category":"page"},{"location":"Running_singleworkflow_params/#genomad_sbatch_time","page":"Single workflow parameters","title":"genomad_sbatch_time","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"maximum time that a sbatch job running geNomad (in slurm) is allowed to run\nthis parameter will be further transmitted to sbatch\nmandatory parameter when running on HPC, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#genomad_cpus_per_task","page":"Single workflow parameters","title":"genomad_cpus_per_task","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum number of CPUs in which geNomad should be run (either on a local server or on HPC).\nwhen running on an HPC, this parameter will be further transmitted to sbatch\nvalue is Integer\ndefault is 20 ","category":"page"},{"location":"Running_singleworkflow_params/#genomad_sbatch_mem","page":"Single workflow parameters","title":"genomad_sbatch_mem","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum memory requirements if geNomad is run as an sbatch job\nthis parameter will be further transmitted to sbatch\nmandatory parameter when running on HPC, no default is given ","category":"page"},{"location":"Running_singleworkflow_params/#DeepVir-Finder-options","page":"Single workflow parameters","title":"DeepVir Finder options","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"If this this step is selected for running (DVF_signal=do), the following will happen:   ","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"DoViP will check each contig in the input file, and, if larger than the value of DVF_maxContigLen it will cut it in smaller pieces. This is to avoid DVF freezing when it encounters larger than 2099000.\nDoViP will start a DVF run in the conda environment given by parameter DVF_env with the following command:  \npython 'path/to/dvf.py' -i 'path/to/input.fasta' -o' path/to/output/folder' -l 'min_contig_len' -c `DVF_cpus_per_task`\nDoViP will merge back into a single entry the larger contigs which have been split in the first step, with the score and the p-value repersentig the median of the smaller contigs.\nDoViP will postprocess all DVF results to remove all contigs with a score smaller than DVF_scoreTh and a p-value larger than DVF_pThreshold. Only NON-INTEGRATED viruses are outputted by DVF.","category":"page"},{"location":"Running_singleworkflow_params/#DVF_signal","page":"Single workflow parameters","title":"DVF_signal","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"if DeepVir Finder predictions should be considered\npossible values:\n'do' - run this predictor step. Can be always used, regardless of the signals in the previous steps\n'dont' - don't run this predictor step. It can be used only if the project is new (continue = false), or, for continued projects, if there was a 'dont' or 'remove' signal in the previous step.\n'use'- re-use predictor results calculated in previous runs of this project. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or 'ignore' in the previous step, and, if their respective \"progress\" is finished.\n'use_external' - use results calculated previously by the predictor independently from a DoViP project.\n'ignore' - doesn't take into consideration existing results calculated in a previous run of this project. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or 'ignore' in the previous step, and, if their respective \"progress\" is finished. \n'remove' - removes results calculated in a previous step. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or ignore in the previous step, regardless of their \"progress\". \nmandatory parameter if DVF should be run, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#DVF_env","page":"Single workflow parameters","title":"DVF_env","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the name of the conda environment where DVF is installed\nmandatory parameter, no default is given    ","category":"page"},{"location":"Running_singleworkflow_params/#DVF_maxContigLen","page":"Single workflow parameters","title":"DVF_maxContigLen","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum length that a contig should have for DVF. If larger than this value, it will be cut into smaller pieces before being inputted into DVF.\nvalue is Integer\ndefault is 2099000","category":"page"},{"location":"Running_singleworkflow_params/#DVF_scoreTh","page":"Single workflow parameters","title":"DVF_scoreTh","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"minimum score value calculated by DVF so that contigs are kept by DoViP \nvalue is Float (between 0 and 1)\ndefault is 0.7","category":"page"},{"location":"Running_singleworkflow_params/#DVF_pThreshold","page":"Single workflow parameters","title":"DVF_pThreshold","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum p-value calculated by DVF so that contigs are kept by DoViP \nvalue is Float (between 0 and 1)\ndefault is 0.01","category":"page"},{"location":"Running_singleworkflow_params/#DVF_p","page":"Single workflow parameters","title":"DVF_p","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"path/to/dvf.py  \nmandatory parameter if DVF should be run, no default is given   ","category":"page"},{"location":"Running_singleworkflow_params/#DVF_sbatch_time","page":"Single workflow parameters","title":"DVF_sbatch_time","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"maximum time that a sbatch job running geNomad (in slurm) is allowed to run\nthis parameter will be further transmitted to sbatch\nmandatory parameter when running on HPC, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#DVF_cpus_per_task","page":"Single workflow parameters","title":"DVF_cpus_per_task","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum number of CPUs in which DVF should be run (either on a local server or on HPC)\nwhen running on an HPC, this parameter will be further transmitted to sbatch\nvalue is Integer\ndefault is 15 ","category":"page"},{"location":"Running_singleworkflow_params/#DVF_sbatch_mem","page":"Single workflow parameters","title":"DVF_sbatch_mem","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum memmory requirements if DVF is run as an sbatch job\nthis parameter will be further transmitted to sbatch\nmandatory parameter when running on HPC, no default is given        ","category":"page"},{"location":"Running_singleworkflow_params/#VirSorter2-options","page":"Single workflow parameters","title":"VirSorter2 options","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"If this this step is selected for running (virSorter2_signal=do), the following will happen:  ","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"DoViP will start a VirSorter2 run in the conda environment given by the virSorter2_env parameter, using the following command:\nvirsorter run -i '/path/to/input.fasta' -w 'path/to/output/folder' -j `virSorter2_cpus_per_task` -d `virSorter2DB_p` --min-length `min_contig_length` --min-score `virSorter2_min_score` --tmpdir 'path/to/output/folder/tmp' --viral-gene-required --exclude-lt2gene --hallmark-required-on-short$(hc) --include-groups dsDNAphage,NCLDV,RNA,ssDNA,lavidaviridae --keep-original-seq --rm-tmpdir\n\n# the value of $(hc) in the code above is \" --high-confidence-only\" if the DoViP parameter `virSorter2_high_confidence_only=true` or \"\" if `virSorter2_high_confidence_only=false`\nDoViP will postprocess the VirSorter2 results (final-viral-score.tsv and final-viral-boundary.tsv files) to separate NON-INTEGRATED from INTEGRATED viruses.","category":"page"},{"location":"Running_singleworkflow_params/#virSorter2_signal","page":"Single workflow parameters","title":"virSorter2_signal","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"if VirSorter2 predictions should be considered\npossible values:\n'do' - run this predictor step. Can be always used, regardless of the signals in the previous steps\n'dont' - don't run this predictor step. It can be used only if the project is new (continue = false), or, for continued projects, if there was a 'dont' or 'remove' signal in the previous step.\n'use'- re-use predictor results calculated in previous runs of this project. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or 'ignore' in the previous step, and, if their respective \"progress\" is finished.\n'use_external' - use results calculated previously by the predictor independently from a DoViP project.\n'ignore' - doesn't take into consideration existing results calculated in a previous run of this project. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or 'ignore' in the previous step, and, if their respective \"progress\" is finished. \n'remove' - removes results calculated in a previous step. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or ignore in the previous step, regardless of their \"progress\". \nmandatory parameter, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#virSorter2_res","page":"Single workflow parameters","title":"virSorter2_res","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"path/to/VirSorter2outputfolder when VirSorter2 results were calculated outside DoViP\nneeded only if virSorter2_signal=use_external\nthe path should be the exact one that was given to the VirSorter2 command as output folder\nDoViP expects to find inside path/to/VirSorter2_output_folder the following files:","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"path/to/VirSorter2_output_folder/\n    ├── final-viral-score.tsv \n    ├── final-viral-boundary.tsv","category":"page"},{"location":"Running_singleworkflow_params/#virSorter2_env","page":"Single workflow parameters","title":"virSorter2_env","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the name of the conda environment where VirSorter2 is installed\nmandatory parameter if virSorter2 signal is do, no default is given, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#virSorter2DB_p","page":"Single workflow parameters","title":"virSorter2DB_p","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the path toward the folder with the virSorter2 database\nmandatory parameter if virSorter2 signal is do, no default is given, no default is given  ","category":"page"},{"location":"Running_singleworkflow_params/#virSorter2_high_confidence_only","page":"Single workflow parameters","title":"virSorter2_high_confidence_only","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"will tell VirSorter2 if it should keep only the high confidence contigs\npossible values: 'true' or 'false'\ndefault is 'false'","category":"page"},{"location":"Running_singleworkflow_params/#virSorter2_min_score","page":"Single workflow parameters","title":"virSorter2_min_score","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"minimum score to be used by VirSorter2 to filter viral contigs\nvalue is Float (between 0.0 and 1.0)\ndefault it 0.5","category":"page"},{"location":"Running_singleworkflow_params/#virSorter2_sbatch_time","page":"Single workflow parameters","title":"virSorter2_sbatch_time","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"maximum time that a sbatch job running VirSorter2 (in slurm) is allowed to run\nthis parameter will be further transmitted to sbatch\nmandatory parameter when running on HPC, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#virSorter2_cpus_per_task","page":"Single workflow parameters","title":"virSorter2_cpus_per_task","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum number of CPUs in which VirSorter2 should be run (either on a local server or on HPC)\nwhen running on an HPC, this parameter will be further transmited to sbatch\nvalue is Integer\ndefault is 20 ","category":"page"},{"location":"Running_singleworkflow_params/#virSorter2_sbatch_mem","page":"Single workflow parameters","title":"virSorter2_sbatch_mem","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum memory requirements if VirSorter2 is run as an sbatch job\nthis parameter will be further transmitted to sbatch\nmandatory parameter when running on HPC, no default is given ","category":"page"},{"location":"Running_singleworkflow_params/#VIBRANT-options","page":"Single workflow parameters","title":"VIBRANT options","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"If this this step is selected for running (vibrant_signal=do), the following will happen:  ","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"DoViP will start a VIBRANT run in the conda environment given by the vibrant_env parameter, using the following command:\npython3 `vibrant_p` -f nucl -i '/path/to/input.fasta' -folder 'path/to/output/folder' -t `vibrant_cpus_per_task` -d `vibrantDB_p` -l `min_contig_length`\nDoViP will postprocess the VIBRANT outputs (VIBRANT_integrated_prophage_coordinates_$(sampleName).tsv, $(sampleName).phages_lytic.fna) to separate NON-INTEGRATED from INTEGRATED viruses.","category":"page"},{"location":"Running_singleworkflow_params/#vibrant_signal","page":"Single workflow parameters","title":"vibrant_signal","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"if VIBRANT predictions should be considered\npossible values:\n'do' - run this predictor step. Can be always used, regardless of the signals in the previous steps\n'dont' - don't run this predictor step. It can be used only if the project is new (continue = false), or, for continued projects, if there was a 'dont' or 'remove' signal in the previous step.\n'use'- re-use predictor results calculated in previous runs of this project. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or 'ignore' in the previous step, and, if their respective \"progress\" is finished.\n'use_external' - use results calculated previously by the predictor independently from a DoViP project.\n'ignore' - doesn't take into consideration existing results calculated in a previous run of this project. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or 'ignore' in the previous step, and, if their respective \"progress\" is finished. \n'remove' - removes results calculated in a previous step. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or ignore in the previous step, regardless of their \"progress\". \nmandatory parameter, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#vibrant_res","page":"Single workflow parameters","title":"vibrant_res","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"path/to/VIBRANT_output_folder when the VIBRANT results were calculated outside DoViP\nneeded only if vibrant_signal=use_external\nthe path should be the exact one that was given to the VIBRANT command as output folder\nDoViP expects to find inside path/to/VIBRANT_output_folder another folder, created by VIBRANT itself, having as prefix VIBRANT and as suffix the input_name (without extension):","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"path/to/VIBRANT_output_folder/\n    ├── VIBRANT_input_name ","category":"page"},{"location":"Running_singleworkflow_params/#vibrant_env","page":"Single workflow parameters","title":"vibrant_env","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the name of the conda environment where VIBRANT is installed\nmandatory parameter if VIBRANT signal is do, no default is given, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#vibrant_p","page":"Single workflow parameters","title":"vibrant_p","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"path/to/VIBRANT_run.py  \nmandatory parameter if VIBRANT signal is do, no default is given, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#vibrantDB_p","page":"Single workflow parameters","title":"vibrantDB_p","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the path toward the folder with the VIBRANT database\nmandatory parameter if VIBRANT signal is do, no default is given, no default is given ","category":"page"},{"location":"Running_singleworkflow_params/#vibrant_sbatch_time","page":"Single workflow parameters","title":"vibrant_sbatch_time","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"maximum time that a sbatch job running VIBRANT (in slurm) is allowed to run\nthis parameter will be further transmitted to sbatch\nmandatory parameter when running on HPC and VIBRANT signal is do, no default is given ","category":"page"},{"location":"Running_singleworkflow_params/#vibrant_cpus_per_task","page":"Single workflow parameters","title":"vibrant_cpus_per_task","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum number of CPUs in which VIBRANT should be run (either on a local server or on HPC)\nwhen running on an HPC, this parameter will be further transmitted to sbatch\nvalue is Integer\ndefault is 20 ","category":"page"},{"location":"Running_singleworkflow_params/#vibrant_sbatch_mem","page":"Single workflow parameters","title":"vibrant_sbatch_mem","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum memmory requirements if VIBRANT is run as an sbatch job\nthis parameter will be further transmitted to sbatch\nmandatory parameter when running on HPC and VIBRANT signal is do, no default is given ","category":"page"},{"location":"Running_singleworkflow_params/#ViralVerify-options","page":"Single workflow parameters","title":"ViralVerify options","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"If this this step is selected for running (viralVerify_signal=do), the following will happen:  ","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"DoViP will start a ViralVerify run in the conda environment given by the viralVerify_env parameter, using the following command:\nviralVerify_p` -f '/path/to/input.fasta' -o 'path/to/output/folder' --hmm `viralVerifyDB_p` --thr `viralVerfify_threshold` -t `viralVerify_cpus_per_task` -p\nDoViP will postprocess ViralVerify outputs (_result_table.csv) to select only the viral contigs with a score bigger than viralVerfify_threshold.  Only NON-INTEGRATED viruses are outputted by ViralVerify.","category":"page"},{"location":"Running_singleworkflow_params/#viralVerify_signal","page":"Single workflow parameters","title":"viralVerify_signal","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"if ViralVerify predictions should be considered\npossible values:\n'do' - run this predictor step. Can be always used, regardless of the signals in the previous steps\n'dont' - don't run this predictor step. It can be used only if the project is new (continue = false), or, for continued projects, if there was a 'dont' or 'remove' signal in the previous step.\n'use'- re-use predictor results calculated in previous runs of this project. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or 'ignore' in the previous step, and, if their respective \"progress\" is finished.\n'use_external' - use results calculated previously by the predictor independently from a DoViP project.\n'ignore' - doesn't take into consideration existing results calculated in a previous run of this project. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or 'ignore' in the previous step, and, if their respective \"progress\" is finished. \n'remove' - removes results calculated in a previous step. It can't be used if the project is new (continue = false). For continued projects, it can be used only after 'do', 'use' or ignore in the previous step, regardless of their \"progress\". \nmandatory parameter, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#viralVerify_res","page":"Single workflow parameters","title":"viralVerify_res","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"path/to/ViralVerify_output_folder when the ViralVerify results were calculated outside DoViP\nneeded only if viralVerify_signal=use_external\nthe path should be the exact one that was given to the ViralVerify command as output folder\nDoViP expects to find inside path/to/ViralVerify_output_folder a file created by ViralVerify having as prefix the input_name (without extension) and as suffix result_table.csv:","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"path/to/ViralVerify_output_folder/\n    ├── input_name_result_table.csv","category":"page"},{"location":"Running_singleworkflow_params/#viralVerify_env","page":"Single workflow parameters","title":"viralVerify_env","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the name of the conda environment where ViralVerify is installed\nmandatory parameter if ViralVerify signal is do, no default is given, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#viralVerifyDB_p","page":"Single workflow parameters","title":"viralVerifyDB_p","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the path toward the HMM profile file of the ViralVerify database\nmandatory parameter if ViralVerify signal is do, no default is given, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#viralVerify_p","page":"Single workflow parameters","title":"viralVerify_p","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"path/to/bin/viralverify \nmandatory parameter if ViralVerify signal is do, no default is given, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#viralVerfify_threshold","page":"Single workflow parameters","title":"viralVerfify_threshold","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"score used to select viral contigs outputted by ViralVerify. \nvalue is Integer (between 1 and 1000)\ndefault is 7","category":"page"},{"location":"Running_singleworkflow_params/#viralVerify_sbatch_time","page":"Single workflow parameters","title":"viralVerify_sbatch_time","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"maximum time that a sbatch job running ViralVeriffy (in slurm) is allowed to run\nmandatory parameter when running on HPC and ViralVerify signal is do, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#viralVerify_cpus_per_task","page":"Single workflow parameters","title":"viralVerify_cpus_per_task","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum number of CPUs in which ViralVerify should be run (either on a local server or on HPC)\nvalue is Integer\ndefault is 20 ","category":"page"},{"location":"Running_singleworkflow_params/#viralVerify_sbatch_mem","page":"Single workflow parameters","title":"viralVerify_sbatch_mem","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum memmory requirements if ViralVerify is run as an sbatch job\nthis parameter will be further transmitted to sbatch\nmandatory parameter when running on HPC and ViralVerify signal is do, no default is given ","category":"page"},{"location":"Running_singleworkflow_params/#ARGUMENTS-FOR-CONSENSUS-PREDICTION-STEPS","page":"Single workflow parameters","title":"ARGUMENTS FOR CONSENSUS PREDICTION STEPS","text":"","category":"section"},{"location":"Running_singleworkflow_params/#CheckV-arguments","page":"Single workflow parameters","title":"CheckV arguments","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"CheckV is used both on the NON-INTEGRATED and INTEGRATED viruses branch to detect viral contigs with host contamination (if they are on the NON-INTEGRATED branch they will be moved to the INTEGRATED branch) and remove the host regions.   In all cases, CheckV is run with the following command:  ","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"checkv end_to_end 'path/to/input.fasta' 'path/to/output_folder' -t `checkv_cpus_per_task` -d `checkvDB_p` --remove_tmp","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"The CheckV statistics will be incorporated in the final virus contig tables.","category":"page"},{"location":"Running_singleworkflow_params/#checkv_env","page":"Single workflow parameters","title":"checkv_env","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the name of the conda environment where CheckV is installed\nmandatory parameter, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#checkvDB_p","page":"Single workflow parameters","title":"checkvDB_p","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the path toward the folder with the CheckV database\nmandatory parameter, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#checkv_sbatch_time","page":"Single workflow parameters","title":"checkv_sbatch_time","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"maximum time that a sbatch job running CheckV (in slurm) is allowed to run\nthis parameter will be further transmitted to sbatch\nmandatory parameter when running on HPC, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#checkv_cpus_per_task","page":"Single workflow parameters","title":"checkv_cpus_per_task","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum number of CPUs in which CheckV should be run (either on a local server or on HPC)\nwhen running on an HPC, this parameter will be further transmitted to sbatch\nvalue is Integer\ndefault is 2 ","category":"page"},{"location":"Running_singleworkflow_params/#checkv_sbatch_mem","page":"Single workflow parameters","title":"checkv_sbatch_mem","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum memmory requirements if checkV is run as an sbatch job\nthis parameter will be further transmitted to sbatch\nmandatory parameter when running on HPC, no default is given ","category":"page"},{"location":"Running_singleworkflow_params/#PhaTYP-arguments","page":"Single workflow parameters","title":"PhaTYP arguments","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"PhaTYP is used on the NON-INTEGRATED viruses branch to predict the potential lifestyle of the respective viruses.   PhaTYP is run with the following command:","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"python `phaTYP_p/PhaTYP_single.py` --contigs 'path/to/input.fasta' --threads `phaTYP_cpus_per_task` --len `min_contig_length` --rootpth 'path/to/temp_output_folder' --out 'path/to/output_folder' --dbdir `phaTYPdb_p` --parampth `phaTYPparam_p`","category":"page"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"The PhaTYP predictions will be incorporated in the final virus contig tables.","category":"page"},{"location":"Running_singleworkflow_params/#phaTYP_env","page":"Single workflow parameters","title":"phaTYP_env","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the name of the conda environment where PhaTYP is installed\nmandatory parameter, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#phaTYP_p","page":"Single workflow parameters","title":"phaTYP_p","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the path toward the folder with PhaTYP\nmandatory parameter, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#phaTYPdb_p","page":"Single workflow parameters","title":"phaTYPdb_p","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the path toward the folder with the PhaTYP database\nmandatory parameter, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#phaTYPparam_p","page":"Single workflow parameters","title":"phaTYPparam_p","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the path toward the folder with the PhaTYP parameters (see PhaTYP manual)\nmandatory parameter, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#phaTYP_sbatch_time","page":"Single workflow parameters","title":"phaTYP_sbatch_time","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"maximum time that a sbatch job running PhaTYP (in slurm) is allowed to run\nthis parameter will be further transmited to sbatch\nmandatory parameter when running on HPC, no default is given","category":"page"},{"location":"Running_singleworkflow_params/#phaTYP_cpus_per_task","page":"Single workflow parameters","title":"phaTYP_cpus_per_task","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum number of CPUs in which PhaTYP should be run (either on a local server or on HPC)\nwhen running on an HPC, this parameter will be further transmitted to sbatch\nvalue is Integer\ndefault is 2 ","category":"page"},{"location":"Running_singleworkflow_params/#phaTYP_sbatch_mem","page":"Single workflow parameters","title":"phaTYP_sbatch_mem","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"the maximum memory requirements if PhaTYP is run as an sbatch job\nthis parameter will be further transmitted to sbatch\nmandatory parameter when running on HPC, no default is given ","category":"page"},{"location":"Running_singleworkflow_params/#NON-INTEGRATED-viruses-branch:-arguments-to-select-final-viral-contigs","page":"Single workflow parameters","title":"NON-INTEGRATED viruses branch: arguments to select final viral contigs","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"At the end of the workflow DoViP keeps only the NON-INTEGRATED viral contigs that fulfill certain criteria. The selection depends on the method used by CheckV to estimate the viral contig completeness, on the value of the viral contig completeness, and on the number of initial predictors that outputted the respective viral contig. ","category":"page"},{"location":"Running_singleworkflow_params/#If-CheckV-could-not-estimate-the-completeness-of-the-viral-contigs:","page":"Single workflow parameters","title":"If CheckV could not estimate the completeness of the viral contigs:","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"it means that CheckV could not find similarities in its database\nthan only the number of viral predictors is taken into consideration. \nI recommend using a higher number of initial predictors, to increase the confidence that the respective contig is actually viral  ","category":"page"},{"location":"Running_singleworkflow_params/#NONInt_th_num_predictors_CheckV_NA","page":"Single workflow parameters","title":"NONInt_th_num_predictors_CheckV_NA","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this parameters gives the minimum number of initial predictors necessary to keep a viral contig if completeness is NA\nvalue is Integer\ndefault is 3","category":"page"},{"location":"Running_singleworkflow_params/#If-CheckV-used-AAIHighConf-method-to-estimate-the-completeness-of-the-viral-contigs:","page":"Single workflow parameters","title":"If CheckV used AAIHighConf method to estimate the completeness of the viral contigs:","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"it means that it found related viruses in its database and it can estimate the completeness with high precision\nall viral contigs with a completeness of at least 90% are kept, regardless of the number of initial predictors ","category":"page"},{"location":"Running_singleworkflow_params/#NONInt_th_num_predictors_CheckV_AAIHighConf","page":"Single workflow parameters","title":"NONInt_th_num_predictors_CheckV_AAIHighConf","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this parameter gives the minimum number of initial predictors necessary to keep a viral contig if the method for determining the completeness is AAIHighConf\nvalue is Integer\ndefault is 1","category":"page"},{"location":"Running_singleworkflow_params/#NONInt_th_completeness_CheckV_AAIHighConf","page":"Single workflow parameters","title":"NONInt_th_completeness_CheckV_AAIHighConf","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this parameter gives the minimum completeness to keep a viral contig when the method for determining the completeness is AAIHighConf\nvalue is Float\ndefault is 30.0","category":"page"},{"location":"Running_singleworkflow_params/#If-CheckV-used-AAIMediumConf-method-to-estimate-the-completeness-of-the-viral-contigs:","page":"Single workflow parameters","title":"If CheckV used AAIMediumConf method to estimate the completeness of the viral contigs:","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"it means that it found related viruses in its database and it can estimate the completeness with moderate precission","category":"page"},{"location":"Running_singleworkflow_params/#NONInt_th_num_predictors_CheckV_AAIMediumConf","page":"Single workflow parameters","title":"NONInt_th_num_predictors_CheckV_AAIMediumConf","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this parameter gives the minimum number of initial predictors necessary to keep a viral contig if the method for determining the completeness is AAIMediumConf\nvalue is Integer\ndefault is 2    ","category":"page"},{"location":"Running_singleworkflow_params/#NONInt_th_completeness_CheckV_AAIMediumConf","page":"Single workflow parameters","title":"NONInt_th_completeness_CheckV_AAIMediumConf","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this parameter gives the minimum completeness to keep a viral contig when the method for determining the completeness is AAIMediumConf\nvalue is Float\ndefault is 10.0","category":"page"},{"location":"Running_singleworkflow_params/#If-CheckV-used-HMM-method-to-estimate-the-completeness-of-the-viral-contigs:","page":"Single workflow parameters","title":"If CheckV used HMM method to estimate the completeness of the viral contigs:","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"it means that it found distantly related viruses in its database and it can estimate the completeness with low precision","category":"page"},{"location":"Running_singleworkflow_params/#NONInt_th_num_predictors_CheckV_HMM","page":"Single workflow parameters","title":"NONInt_th_num_predictors_CheckV_HMM","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this parameter gives the minimum number of initial predictors necessary to keep a viral contig if the method for determining the completeness is HMM\nvalue is Integer\ndefault is 2    ","category":"page"},{"location":"Running_singleworkflow_params/#NONInt_th_completeness_CheckV_HMM","page":"Single workflow parameters","title":"NONInt_th_completeness_CheckV_HMM","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this parameter gives the minimum completeness to keep a viral contig when the method for determining the completeness is HMM\nvalue is Float\ndefault is 10.0","category":"page"},{"location":"Running_singleworkflow_params/#INTEGRATED-viruses-branch:-arguments-to-select-final-viral-contigs","page":"Single workflow parameters","title":"INTEGRATED viruses branch: arguments to select final viral contigs","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"At the end of the workflow DoViP keeps only the INTEGRATED viruses that fulfill certain criteria. The selection depends on the method used by CheckV to estimate the viral contig completeness, on the value of the viral contig completeness, and on the number of initial predictors that outputted the respective viral contig.   ","category":"page"},{"location":"Running_singleworkflow_params/#If-CheckV-could-not-estimate-the-completeness-of-the-viral-contigs:-2","page":"Single workflow parameters","title":"If CheckV could not estimate the completeness of the viral contigs:","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"it means that CheckV could not find similarities in its database\nthan only the number of viral predictors is taken into consideration. \nI recommend using a higher number of initial predictors, to increase the confidence that the respective contig is actually viral  ","category":"page"},{"location":"Running_singleworkflow_params/#Int_th_num_predictors_CheckV_NA","page":"Single workflow parameters","title":"Int_th_num_predictors_CheckV_NA","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this parameter gives the minimum number of initial predictors necessary to keep a viral contig if completeness is NA\nvalue is Integer\ndefault is 3","category":"page"},{"location":"Running_singleworkflow_params/#If-CheckV-used-AAIHighConf-method-to-estimate-the-completeness-of-the-viral-contigs:-2","page":"Single workflow parameters","title":"If CheckV used AAIHighConf method to estimate the completeness of the viral contigs:","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"it means that it found related viruses in its database and it can estimate the completeness with high precision\nall viral contigs with a completeness of at least 90% are kept, regardless of the number of initial predictors ","category":"page"},{"location":"Running_singleworkflow_params/#Int_th_num_predictors_CheckV_AAIHighConf","page":"Single workflow parameters","title":"Int_th_num_predictors_CheckV_AAIHighConf","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this parameter gives the minimum number of initial predictors necessary to keep a viral contig if the method for determining the completeness is AAIHighConf\nvalue is Integer\ndefault is 1","category":"page"},{"location":"Running_singleworkflow_params/#Int_th_completeness_CheckV_AAIHighConf","page":"Single workflow parameters","title":"Int_th_completeness_CheckV_AAIHighConf","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this parameter gives the minimum completeness to keep a viral contig when the method for determining the completeness is AAIHighConf\nvalue is Float\ndefault is 30.0","category":"page"},{"location":"Running_singleworkflow_params/#If-CheckV-used-AAIMediumConf-method-to-estimate-the-completeness-of-the-viral-contigs:-2","page":"Single workflow parameters","title":"If CheckV used AAIMediumConf method to estimate the completeness of the viral contigs:","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"it means that it found related viruses in its database and it can estimate the completeness with moderate precission","category":"page"},{"location":"Running_singleworkflow_params/#Int_th_num_predictors_CheckV_AAIMediumConf","page":"Single workflow parameters","title":"Int_th_num_predictors_CheckV_AAIMediumConf","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this parameter gives the minimum number of initial predictors necessary to keep a viral contig if the method for determining the completeness is AAIMediumConf\nvalue is Integer\ndefault is 2    ","category":"page"},{"location":"Running_singleworkflow_params/#Int_th_completeness_CheckV_AAIMediumConf","page":"Single workflow parameters","title":"Int_th_completeness_CheckV_AAIMediumConf","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this parameter gives the minimum completeness to keep a viral contig when the method for determining the completeness is AAIMediumConf\nvalue is Float\ndefault is 10.0","category":"page"},{"location":"Running_singleworkflow_params/#If-CheckV-used-HMM-method-to-estimate-the-completeness-of-the-viral-contigs:-2","page":"Single workflow parameters","title":"If CheckV used HMM method to estimate the completeness of the viral contigs:","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"it means that it found distantly related viruses in its database and it can estimate the completeness with low precision","category":"page"},{"location":"Running_singleworkflow_params/#Int_th_num_predictors_CheckV_HMM","page":"Single workflow parameters","title":"Int_th_num_predictors_CheckV_HMM","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this parameter gives the minimum number of initial predictors necessary to keep a viral contig if the method for determining the completeness is HMM\nvalue is Integer\ndefault is 2        ","category":"page"},{"location":"Running_singleworkflow_params/#Int_th_completeness_CheckV_HMM","page":"Single workflow parameters","title":"Int_th_completeness_CheckV_HMM","text":"","category":"section"},{"location":"Running_singleworkflow_params/","page":"Single workflow parameters","title":"Single workflow parameters","text":"this parameter gives the minimum completeness to keep a viral contig when the method for determining the completeness is HMM\nvalue is Float\ndefault is 10.0","category":"page"},{"location":"authors/","page":"Authors","title":"Authors","text":"DoViP was developed by Dr. Cristina Moraru, a senior scientist at the University of Duisburg-Essen. ","category":"page"},{"location":"dovip_outputs_stepbystep/#Outputs-step-by-step-breakdown","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"","category":"section"},{"location":"dovip_outputs_stepbystep/#Removal-of-small-contigs","page":"Outputs - step by step breakdown","title":"Removal of small contigs","text":"","category":"section"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"Initialy, DoViP removes from the input file all contigs smaller than min_contig_length. The resulting fasta file is saved a folder with the sufix coresponding to min_contig_length, as shown below. ","category":"page"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"single_workflow_project_name/ \n    ├──  ALL_00_min_length_#   (#=`min_contig_length`)\n    |        ├── outMFasta_small.fna  \n    ├──  ... ","category":"page"},{"location":"dovip_outputs_stepbystep/#Running-initial-predictors","page":"Outputs - step by step breakdown","title":"Running initial predictors","text":"","category":"section"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"The .fna file from the removal of small contigs step is sent to each of the initial predictions selected by the user. The results from each intial predictor are saved into folders with corresponding names, within subfolders labeled with the sufix _out. The \"raw\" data from each predictor are further postprocessed by DoViP and saved saved in two .tsv files, one for the integrated viruses branch (geNomad, VirSorter2 and VIBRANT), and the other for the non-integrated viruses branch (geNomad, DeepVir Finder, VirSorter2, VIBRANT and ViralVerify). The two .tsv files are saved directly in these folders, as shown below.  ","category":"page"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"single_workflow_project_name/ \n    ├──  ... \n    ├──  ALL-01a_genomad\n    |        ├── ALL-01a_01_genomad_out\n    |        ├── ALL-01a_02_postgenomad_integrated_df.tsv\n    |        ├── ALL-01a_02_postgenomad_nonintegrated_df.tsv\n    ├── ALL-01b_DVF\n    |        ├── ALL-01b_01_DVF_out\n    |        ├── ALL-01b_postdfvf_nonintegrated_df.tsv\n    ├── ALL-01c_virSorter2\n    |        ├── ALL-01c_01_virSorter2_out\n    |        ├── ALL-01c_02_postVS2_integrated_df.tsv\n    |        ├── ALL-01c_02_postVS2_nonintegrated_df.tsv\n    ├── ALL-01d_vibrant\n    |        ├── ALL-01d_01_vibrant_out\n    |        ├── ALL-01d_02_postvibrant_integrated_df.tsv\n    |        ├── ALL-01d_02_postvibrant_nonintegrated_df.tsv\n    ├── ALL-01e_viralVerify\n    |        ├── ALL-01e_01_viralVerify_out\n    |        ├── ALL-01e_02_postViralVerify.tsv \n    ├──  ... ","category":"page"},{"location":"dovip_outputs_stepbystep/#Merging-and-checkV-for-non-integrated-viruses","page":"Outputs - step by step breakdown","title":"Merging and checkV for non-integrated viruses","text":"","category":"section"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"In this step, DoViP first brings toghether all virus contigs estimated as lytic by the various predictors and their associated information, and saves them in a .tsv and a .fna file with the prefix N-02_00. The .fna file then is inputed in CheckV, and the results are saved in the N-02_01_CheckV folder. Postprocessing after checkV includes moving of the contigs marked as containing integrated viruses on the integrated viruses branch and then saving the remaining non-integrated viruses and their coresponding information in a .tsv and .fna file (prefix N-02_02). The folder structure and outputs are shown below.  ","category":"page"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"single_workflow_project_name/ \n    ├── ...       \n    ├── N-02_checkV_Nonintegrated\n    |        ├── N-02_00_aggregated_nonintegrated_virus_contigs.tsv\n    |        ├── N-02_00_aggregated_nonintegrated_virus_contigs.fna\n    |        ├── N-02_01_checkV\n    |        ├── N-02_02_postcheckV_nonintegrated_df.tsv\n    |        ├── N-02_02_postcheckV_nonintegrated.fna\n    ├──  ... ","category":"page"},{"location":"dovip_outputs_stepbystep/#Merging-and-checkV-for-integrated-viruses","page":"Outputs - step by step breakdown","title":"Merging and checkV for integrated viruses","text":"","category":"section"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"In this step DoViP does the following:","category":"page"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"brings together all virus contigs estimated as \"temperate\" by the various predictors, and saved them in a .fna and a .tsv file with the prefix I-02_00.\ninputs the .fna file in CheckV, and saves the results in the I-02_01_checkVIntegrated_1 folder.\nuses the information from the initial predictors and CheckV to remove host regions and to merge overlapping viral regions, and saved the them in a .fna and .tsv file with the prefix I-02_03 (the filex with I0202 represent intermediary results).\nsends the merged integrated viruses to CheckV, and saves the data in the folder I-02_04_checkVIntegrated_2\npostprocesses the output from the second CheckV step to confirm that no host-contamination is present and to add the completeness and other checkV data to the merged integrated viruses. The data are saved in the file with the I-02_05 prefix.","category":"page"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"single_workflow_project_name/ \n    ├── ...\n    ├── I-02_checkV_Integrated\n    |        ├── I-02_00_aggregated_integrated_virus_All_contigs.tsv\n    |        ├── I-02_00_aggregated_integrated_virus_All_contigs.fna\n    |        ├── I-02_01_checkVIntegrated_1\n    |        ├── I-02_02_postcheckV1_integrated_cordf.tsv\n    |        ├── I-02_02_postcheckV1_integrated_withmergedprovirIDs_cordf.tsv\n    |        ├── I-02_03_merged_integrated.tsv\n    |        ├── I-02_03_merged_integrated.fna\n    |        ├── I-02_04_checkVIntegrated_2\n    |        ├── I-02_05_postcheckV2_integrated_df_p.tsv\n    ├──  ... ","category":"page"},{"location":"dovip_outputs_stepbystep/#Predicting-virus-lifestyles-with-PhaTYP","page":"Outputs - step by step breakdown","title":"Predicting virus lifestyles with PhaTYP","text":"","category":"section"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"In this step DoViP sends the non-integrated viruses from the previous step (N-0202postcheckVnonintegrated.fna) to PhaTYP, which predicts their potential life styles. The PhaTYP results are saved in the folder with the `outsuffix. The predictions are then added to the previous data and saved in the .tsv file with theN-03_02` prefix.","category":"page"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"single_workflow_project_name/ \n    ├── ...\n    ├── N-03_phaTYPNonintegrated\n    |        ├── N-03_01_phaTYP_out\n    |        ├── N-03_02_NonINT_mergedPostCheckV_PhaTYP.tsv","category":"page"},{"location":"dovip_outputs_stepbystep/#Final-virus-selection-non-integrated-virus-branch","page":"Outputs - step by step breakdown","title":"Final virus selection - non-integrated virus branch","text":"","category":"section"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"DoViP uses data in the N-03_02_NonINT_mergedPostCheckV_PhaTYP.tsv file to perform a final selection of the non-integrated virus contigs based on their completeness and the number of initial predictors. The results are saved as .fna and .tsv file, as shown below. ","category":"page"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"single_workflow_project_name/ \n    ├── ...\n    ├── N-04_FinalThresholding\n    |        ├── N-04_Final_Viruses_df.tsv\n    |        ├── N-04_Final_Viruses.fna\n    └── ...","category":"page"},{"location":"dovip_outputs_stepbystep/#Final-virus-selection-non-integrated-virus-branch-2","page":"Outputs - step by step breakdown","title":"Final virus selection - non-integrated virus branch","text":"","category":"section"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"DoViP uses data in the I-02_05_postcheckV2_integrated_df_p.tsv file to perform a final selection of the integrated virus contigs based on their completeness and the number of initial predictors. The results are saved as .fna and .tsv file, as shown below. ","category":"page"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"single_workflow_project_name/ \n    ├── ...\n    ├── I-03_FinalThresholding\n    |        ├── I-03_Final_Viruses_df.tsv\n    |        ├── I-03_Final_Viruses.fna\n    └── ...","category":"page"},{"location":"dovip_outputs_stepbystep/#Mixed-viruses","page":"Outputs - step by step breakdown","title":"Mixed viruses","text":"","category":"section"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"It can happen that the same contig is identified by some initial predictors as non-integrated viruses and by some other predictors as harboring integrated viruses. DoViP identifies these mixed predictions and reports them in the M_02_Detection folder. The contigs reported in the two .tsv files, one for non-integrated branch and the other for the integrated branch, should be the same.","category":"page"},{"location":"dovip_outputs_stepbystep/","page":"Outputs - step by step breakdown","title":"Outputs - step by step breakdown","text":"single_workflow_project_name/ \n    ├── ...\n    ├── M-02_Detection\n    |        ├── M-02_Mixed_Int_Viruses.tsv\n    |        ├── M-02_Mixed_NonInt_Viruses.tsv\n    └── ...","category":"page"},{"location":"Running_multipleworkflow_params/#DoViP-multipleworkflow-parameters","page":"Multiple workflows parameters","title":"DoViP multipleworkflow parameters","text":"","category":"section"},{"location":"Running_multipleworkflow_params/#Arguments","page":"Multiple workflows parameters","title":"Arguments","text":"","category":"section"},{"location":"Running_multipleworkflow_params/","page":"Multiple workflows parameters","title":"Multiple workflows parameters","text":"When running DoViP in multiworkflow mode, there are only four arguments that need to be given at the command line.","category":"page"},{"location":"Running_multipleworkflow_params/#projtype","page":"Multiple workflows parameters","title":"projtype","text":"","category":"section"},{"location":"Running_multipleworkflow_params/","page":"Multiple workflows parameters","title":"Multiple workflows parameters","text":"the only acceptable value here is 'multipleworkflow', and it tells DoViP that it should process multiple samples, one after the other\nmandatory parameter, no default is given","category":"page"},{"location":"Running_multipleworkflow_params/#spd","page":"Multiple workflows parameters","title":"spd","text":"","category":"section"},{"location":"Running_multipleworkflow_params/","page":"Multiple workflows parameters","title":"Multiple workflows parameters","text":"value: path/to/ouptput_folder\nin this folder there will be created individual subfolders for each sample\nmandatory parameter, no default is given","category":"page"},{"location":"Running_multipleworkflow_params/#allrefs_params","page":"Multiple workflows parameters","title":"allrefs_params","text":"","category":"section"},{"location":"Running_multipleworkflow_params/","page":"Multiple workflows parameters","title":"Multiple workflows parameters","text":"value: path/to/parameter.tsv\nit represents a .tsv file where each row represents a sample to be analysed by DoViP and each column represents one argument. \nthis file should contain values for all arguments detailed in the singleworkflow page (see previous page), with the exception of pd_prefix (is is not needed, because it is replaced here by the spd argument)\nan example of this .tsv file can be downloaded from here. Alternatively, you can use for the generation of this input file a template script using the Julia language or a template script using the R language.\nmandatory parameter, no default is given","category":"page"},{"location":"Running_multipleworkflow_params/#continue","page":"Multiple workflows parameters","title":"continue","text":"","category":"section"},{"location":"Running_multipleworkflow_params/","page":"Multiple workflows parameters","title":"Multiple workflows parameters","text":"indicates if the multipleworkflow project should be continued from a previous run\npossible values: 'true' or 'false'\ndefault is 'false'","category":"page"},{"location":"Running_multipleworkflow_params/","page":"Multiple workflows parameters","title":"Multiple workflows parameters","text":"note: Note\nif continue is set to 'false' and the project folder allready exists, a message will appear asking to confirm or deny the deletion of the existing folder.","category":"page"},{"location":"Running_multipleworkflow_params/#Example-command","page":"Multiple workflows parameters","title":"Example command","text":"","category":"section"},{"location":"Running_multipleworkflow_params/","page":"Multiple workflows parameters","title":"Multiple workflows parameters","text":"Example of calling DoViP in multiworkflow mode:","category":"page"},{"location":"Running_multipleworkflow_params/","page":"Multiple workflows parameters","title":"Multiple workflows parameters","text":"DoViP projtype=multiworkflow continue=false allrefs_params=path/to/tsv_file_with_parameters spd=path/to/output_folder","category":"page"},{"location":"Running_multipleworkflow_params/","page":"Multiple workflows parameters","title":"Multiple workflows parameters","text":"tip: Tip\nDue to the high number of arguments needed by DoViP, it is easier to call it in multipleworkflow mode even when running one single sample, because in this mode most of parameters are given as a .tsv file. ","category":"page"},{"location":"installation_DoViP_env/#Variant-1:-Step-by-step","page":"DoViP environment","title":"Variant 1: Step by step","text":"","category":"section"},{"location":"installation_DoViP_env/#1.-Create-the-conda-environment-for-DoViP-and-install-Julia-programming-language","page":"DoViP environment","title":"1. Create the conda environment for DoViP and install Julia programming language","text":"","category":"section"},{"location":"installation_DoViP_env/","page":"DoViP environment","title":"DoViP environment","text":"# create conda env\nconda create -p /path/toward/conda_DoViP\nconda activate /path/toward/conda_DoViP\n\n# download and install julia version 1.10.0\ncd /path/toward/conda_DoViP\nwget https://julialang-s3.julialang.org/bin/linux/x64/1.10/julia-1.10.0-linux-x86_64.tar.gz\ntar -xzvf julia-1.10.0-linux-x86_64.tar.gz\nrm julia-1.10.0-linux-x86_64.tar.gz\nmkdir bin\n\n# make a symbolic link of the julia executable in the /path/toward/conda_DoViP/bin/ folder\nln -s /path/toward/conda_DoViP/julia-1.10.0/bin/julia /path/toward/conda_DoViP/bin/julia\n","category":"page"},{"location":"installation_DoViP_env/#2.-Bring-the-DoViP-repo","page":"DoViP environment","title":"2. Bring the DoViP repo","text":"","category":"section"},{"location":"installation_DoViP_env/","page":"DoViP environment","title":"DoViP environment","text":"cd /path/toward/conda_DoViP\ngit clone https://github.com/CristinaMoraru/DoViP.git\n\nmv DoViP/* .\nrm DoViP\n\n# give permissions to the folder where julia saved its libraries\ncd share\nchmod 777 -R julia","category":"page"},{"location":"installation_DoViP_env/#3.-Refresh-the-DoViP-conda-environment","page":"DoViP environment","title":"3. Refresh the DoViP conda environment","text":"","category":"section"},{"location":"installation_DoViP_env/","page":"DoViP environment","title":"DoViP environment","text":"conda deactivate conda_DoViP\nconda activate /path/toward/conda_DoViP\n","category":"page"},{"location":"installation_DoViP_env/#4.-Instantiate-DoViP-libraries","page":"DoViP environment","title":"4. Instantiate DoViP libraries","text":"","category":"section"},{"location":"installation_DoViP_env/","page":"DoViP environment","title":"DoViP environment","text":"\ncd /path/toward/conda_DoViP/\n\njulia -e 'using Pkg; Pkg.activate(\"DoViP_App.jl\"); Pkg.instantiate()' \n","category":"page"},{"location":"installation_DoViP_env/","page":"DoViP environment","title":"DoViP environment","text":"Instantiation is necessary to bring on your machine the packages on which DoViP depends. ","category":"page"},{"location":"installation_DoViP_env/","page":"DoViP environment","title":"DoViP environment","text":"note: Note\nAfter successfull instantation Julia will atempt to start DoViP directly. Obviously, because the arguments are missing, it will give an error message:  \" Aborting Program because the mandatory parameter 'projtype' is missing. Please make sure you input it correctly and try again. WARNING: –output requested, but no modules defined during run lld: error: cannot open /home/cmoraru/miniconda3/envs/condaDoViPv0.8/share/julia/compiled/v1.10/DoViPApp/jlJ195Bq: No such file or directory ◓ DoViPApp 62 dependencies successfully precompiled in 56 seconds 1 dependency had output during precompilation: ┌ DoViP_App │  [Output was shown above] └  \"\"Ignore the message, it actually means that DoViP was successfully installed.","category":"page"},{"location":"installation_DoViP_env/#5.Test-installation","page":"DoViP environment","title":"5.Test installation","text":"","category":"section"},{"location":"installation_DoViP_env/","page":"DoViP environment","title":"DoViP environment","text":"DoViP --help","category":"page"},{"location":"installation_DoViP_env/","page":"DoViP environment","title":"DoViP environment","text":"You should get the following message: \"DoViP - a workflow for virus prediction in metagenomes.\"","category":"page"},{"location":"installation_DoViP_env/#Variant-2:-From-a-conda-package","page":"DoViP environment","title":"Variant 2: From a conda package","text":"","category":"section"},{"location":"installation_DoViP_env/","page":"DoViP environment","title":"DoViP environment","text":"to be prepared","category":"page"},{"location":"continue_projs/#Continuing-projects","page":"Continue projects","title":"Continuing projects","text":"","category":"section"},{"location":"continue_projs/#Singleworkflow-projects","page":"Continue projects","title":"Singleworkflow projects","text":"","category":"section"},{"location":"continue_projs/","page":"Continue projects","title":"Continue projects","text":"When running in singleworkflow mode, DoViP records the progress through the workflow steps and other various parameters. This information is saved in binary files (sproj.binary), which can later be used to resume the calculations for a project.  There are several reasons to continue an already finished project:","category":"page"},{"location":"continue_projs/","page":"Continue projects","title":"Continue projects","text":"to add/remove results from any of the five initial predictors. For details, see the description of the genomad_signal, DVF_signal, virSorter2_signal, vibrant_signal and viralVerify_signal arguments.\nto continue calculations past the initial predictors step. For details, see the stop_after_initial_predictors argument.\nto change the parameters for the final selection of the contigs\nto resume a failed project (e.g., a project which failed in the VIBRANT step because the name of the conda environment was not correctly setup, can be continued without having to recalculate the first three predictors)","category":"page"},{"location":"continue_projs/","page":"Continue projects","title":"Continue projects","text":"To continue singleworkflow projects, the continue argument needs to be setup to true. In this case, some of the DoViP ouptuts could be deleted and recalculated, as follows:","category":"page"},{"location":"continue_projs/","page":"Continue projects","title":"Continue projects","text":"when adding/removing results from any of the initial predictors, all the outputs from the Consensus Prediction Step and the Final Thresholding Step will be removed\nwhen changing the parameters for the final selection of the contigs, the previous outputs will be first removed and then re-calculated","category":"page"},{"location":"continue_projs/#Multipleworkflow-projects","page":"Continue projects","title":"Multipleworkflow projects","text":"","category":"section"},{"location":"continue_projs/","page":"Continue projects","title":"Continue projects","text":"When running in multipleworkflow mode, DoViP records the progress in processing each of the samples (\"done\", \"running\", \"notdone\") in another binary file ([mproj.binary](dovipprojects.md#multipleworkflow-projects)). Furthermore, since each sample subfolder is the equivalent of a singleworkflow project, it also records the progress of the workflow within individual samples in the corresponding sproj.binary file. Later on, DoViP can use the information stored in these files to continue the project. As a result, in the context of multipleworkflow projects, the continue argument has two meanings:","category":"page"},{"location":"continue_projs/","page":"Continue projects","title":"Continue projects","text":"first, when used as a DoViP argument at the command line in conjuction with projtype=multipleworkflow, it means if generally the multipleworkflow project should be continued or not\nsecond, when used in the .tsv file given as value to the allrefs_params argument, it indicates if a particular sample from the .tsv file should be continued or not","category":"page"},{"location":"continue_projs/","page":"Continue projects","title":"Continue projects","text":"Taken togheter, it means that, when continuing a multipleworkflow project, DoViP will:","category":"page"},{"location":"continue_projs/","page":"Continue projects","title":"Continue projects","text":"check the continue argument for each sample. \nIf it's value is false, it will check further if the status of the sample is \"done\", \"running\" or \"not_done\". If \"done\", it will move to the next sample. If not, it will perform the calculations for this sample.\nIf it's value is true, it will redo the calculations for this sample, using the parameters in the .tsv file","category":"page"},{"location":"continue_projs/","page":"Continue projects","title":"Continue projects","text":"warning: Warning\nIf continue for the multipleworkflow project is set to 'false' and the project folder allready exists, a message will appear asking to confirm or deny the deletion of the pre-existing folder.   If continue for any of the samples in a multipleworkflow project is set to false and the corresponding subfolder already exists, a message will appear at stdout to confirm or deny the deletion of the pre-existing folder. In this case, if the DoViP stdout is redirected to a file, the message will not be vissible and DoViP will not progress. ","category":"page"},{"location":"#DoViP-Do-Virus-Prediction","page":"Home","title":"DoViP - Do Virus Prediction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"DoViP is a workflow designed to integrate the results from several virus predictors: geNomad, DeepVirFinder, VirSorter2, VIBRANT and ViralVerify. Its main features are:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Processing non-integrated viruses (entire contigs defined as \"lytic\" by various predictors) separately from integrated virus regions (parts of the input contigs deemed by various predictors as temperate/pro-viruses).\nRemoving host regions (based on CheckV results) and merging overlapping integrated virus regions (including those that span the ends of circularizable contigs).\nSelecting final non-integrated virus contigs and integrated virus regions based on i) the number of predictors detecting them; and ii) their completeness, as determined by CheckV. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"The choice of the five virus predictors is fully customizable (any combination between 1 and 5 predictors is allowed), as well as the choice for the final selection parameters.   A DoViP workflow is split into three steps:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Initial prediction step. This is where DoViP runs and/or post-processes the results from the five initial predictors (geNomad, DeepVirFinder, VirSorter2, VIBRANT and ViralVerify).\nConsensus prediction step. This is where DoViP brings together the results from all initial predictors. \nFinal thresholding step. This is where DoViP is selecting the final viral contigs/regions.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: DoViPv0.8 workflow scheme)  ","category":"page"},{"location":"Installation/","page":"Overview","title":"Overview","text":"DoViP runs and then integrates the results from several virus analysis tools. These tools come with their own conda environments and databases. It is quite likely that the users have already installed these tools on their servers. As a result, I have decided not to include everything in a big conda environment, but rather to keep each tool in its own conda environment, separated from the conda environment of DoViP.","category":"page"}]
}
